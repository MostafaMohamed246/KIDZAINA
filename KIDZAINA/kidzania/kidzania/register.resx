<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_email.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABBhJREFUaEPt
        mFlIVUEYx7WF9kCKyrIgKtoIoqA9uLQQEoQU4n4xH4weoqfo9UIvFr0IBYkURAQZEVEIEUFBKxZRRERF
        C7SQ0kaLGqn1+5/mXI7Tud3rNfWeOB/8PTPf95+Z7z9zZuZcs0ILLbTQgmWlpaU5QUd1dfXIrLKysp9B
        R3l5ed1/JeSzHQgg9kvIPPDC4wwaDkUikSHOhq+srJzEprnlQ8pkdPFK7XQEyBCwQc+KiopRBM76NMhE
        fCfXqPKOxWKDSkpKluvV6gA75CwsLBxM+YAhZyo+MulrlC/lseC8fWrVSp0IWjLqnZ5YpuAFsz/fiMgj
        z3vy20KE087l8lvMFuqtVnwgcZuccpUb22Eh9VduzE+IcJOlm6AGlJdBarHiA4Fz2sMmp3zQ7cpIJER4
        SnC2GhYVFc1gBh75cPoLB7V3lQs5baP+w4onvdnfQ1itDqLR6DjKV3w4fYlOxnSOV+1d6rVWPI5kQn6y
        Eu2QStRZfn7+MHwnbE4foZVxt2hc7rjhlE/6cOJIKsRAF09MnWLZlGt8OP8M9N/i3AsYz/H4rtkcG6kK
        ccDq1LufAjTU8az7x5fbCzym75kag/FmUX9ixX3RIyEG56uqqsYYMQXUv1nx3uCq9qL6ZiVWUX9nxRMi
        HSHCXQacogGZtSXU31rxdNCgvaA+KReBNk8sKdIVIjznXJ+rgXlOp/7QivcEtZ7jNUa9y4onRW+ECA0a
        XMbK5NDZZR/O3xA/XmVmQj5YnJSQrpBOEt/N2NlKwH3NzPF83OImwjcGL1A7vVI6nVTGnwdueHgpIR0h
        H2m0UYPqdaCso1gz6z2e9Xr4tXXRzOwvFRkBE6k30aYFn/NFqwmhXme1+SvE74mQ+zoSNRiDTqB+yRsn
        doQPzqGKU96O76s3LjDgHZKfI46e+J554j/MSjsGN4ovpY/WlIVAPMkKjNYAJDAf32ObY3AGkc7HXXFx
        8VTqe2nbyLOB51b3HtKK4Gs2bboBMfVaFfFoswjfc5tjIxUhHWaWnP1AuRDfF4tj4yG8xeLbZl7HXcTb
        fdp50cTem6Y22j/wL/hw4kgmpBlCxE2A+j6Q6tEo3kWwgyTW0c8moP300sSTAr5+Pqx1xzftfccnllBI
        k14NdQIpl/pVK95f0HdejeeX6yZ8nyxOQiGH3VsWwgrqr614v4M8GlnZHJPTbHwPrHg3Id8hV4sso7wb
        3x8/YgYQ+oBcoNz0vUd+p9yYV8gbsFIk/WanfMz4Mw1tCKhUnli2mewOV8h19sNkRTgWp+O842mYkVDi
        7p1FOYJvj06EEcaxHkfKn84DDfK9Apz/qrj3U3yJbHIA8BoxKyRCm/qoDyFI0L7ZnOgeCRRYlYQXYqDg
        CNGfoAMx5c4+CS200EILrX8tK+sXgth2qFT8NpcAAAAASUVORK5CYII=
</value>
  </data>
</root>